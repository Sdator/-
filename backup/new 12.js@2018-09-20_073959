


//设置对象原型即继承  类，要继承的父类
Object.setPrototypeOf(child, parent);

//返回对象自身的所有属性名
Object.getOwnPropertyNames(o)
//对象合并 合并后对象，加入的对象...
Object.assign(target, source1, source2);

//设置唯一标识 用作变量私有属性
Symbol()




Object.getOwnPropertyNames(class{
	a,b,c,d
	
})




let s = new Set([[6,6],[6,6], 1, 2, 2, 3, 3]);

for(v of s)console.log(v)






document.getElementById("id_1").
var iframe = document.getElementsByTagName("iframe")
for(i=0;i<iframe.length;i++){
	
}


iframe[i].style.visibility="hidden";


	window
	frames.length



a = document.getElementById("ck").contentWindow

document.getElementsByTagName("iframe")[0].style.color="#00FF00"

backgroundColor="#00FF00"
document.getElementsByTagName("iframe")[0].style.opacity="0.0"



所有框架透明
	//获取所有框架
	var iframe=document.getElementsByTagName("iframe")
	for(i=0;i<iframe.length;i++){
		//设置透明
		iframe[i].style.opacity="0.0"
	}


console.log(iframe[i])	






myWindow=window.open('','','width=200,height=100')
myWindow.document.write("This is 'myWindow'")
myWindow.focus()
myWindow.opener.document.write("This is the parent window")

frames[0].style.color="#00FF00"



document.getElementById("aaaaaaaaaaaaaaaaaaa").anchors.length

parent.document.




插入样式

1、插入样式表 用户无法编辑
	//获取当前系统样式表
	var styleSheet = document.styleSheets[0]
	//如果当前html页面没有样式表 则手动创建
	if(document.styleSheets < 1){
		//创建元素标签
		var styleEl = document.createElement('style'),
		//定义styleSheet对象
		 styleSheet = styleEl.sheet;
		 //加入head元素节点中
		 document.head.appendChild(styleEl);
	}
	styleSheet.insertRule('.playbg {z-index: -999}',0)
	
2、直接在style属性中变更
	document.getElementsByClassName("abc")[0].style.visibility="hidden"
	document.getElementsByName('__main_iframe__')[0].style.visibility="hidden"
	document.getElementById("intro").style.color="#00FF00"

	
	
	document.getElementsByClassName("playbg")[0]
	document.styleSheets[0].insertRule('p {color: #00FFFF}',0)
	document.styleSheets[0].cssRules
	document.body.style.cssText='*{visibility:"hidden"}'
	
	
	
	

为元素添加属性的方法
1、
	//创建属性对象节点
	var typ=document.createAttribute("class");
	//设置属性内容
	typ.nodeValue="democlass";
	//添加属性节点到元素对象
	h.attributes.setNamedItem(typ);

2、
	document.getElementById("intro").setAttribute("class","abc")
	
3、
	document.body.id="abc"

	
window.length
	
	
	

document.getElementsByName('__main_iframe__')[0].style.zIndex="-10086"

document.getElementsByName('__main_iframe__')[0].style.visibility="hidden"
document.getElementsByClassName('gbtn')[0].style.visibility="hidden"
document.getElementsByClassName('xcx')[0].style.visibility="hidden"


visibility:hidden


position:absolute;
left:0px;
top:0px;
z-index:-1


document.styleSheets[0].insertRule('.playbg {z-index: -999}',0)


.cssRules

CSSStyleDeclaration 


document.getElementById("document.cs_DIV_cscpvrich7798B")






setAttribute("name","abc")
document.getElementsByTagName("iframe")[0].NamedNodeMap




console.log(x)

	//console.log(iframe[x].setAttribute("name"))
console.log(i++)
length

document.getElementsByTagName("iframe")[0].attributes

XML DOM 属性
一些典型的 DOM 属性：
	x.nodeName - x 的名称
	x.nodeValue - x 的值
	x.parentNode - x 的父节点
	x.childNodes - x 的子节点
	x.attributes - x 的属性节点

XML DOM 方法
	x.getElementsByTagName(name) - 获取带有指定标签名称的所有元素
	x.appendChild(node) - 向 x 插入子节点
	x.removeChild(node) - 从 x 删除子节点





创建新的 Attr 节点  属性节点
createAttribute(name)







